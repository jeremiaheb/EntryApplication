- name: provision server
  hosts: '*'
  tasks:
    # We occasionally see timeouts of this service when using virtualized
    # network interfaces. It does not always happen, but when it does, it makes
    # the boot take a very long time.
    #
    # At some point in the future it may be good to remove this and see if the
    # problem still exists.
    - name: disable waiting for network on boot
      ansible.builtin.service:
        name: systemd-networkd-wait-online
        enabled: false
      become: true

    - name: install required packages
      ansible.builtin.package:
        name:
          - build-essential
          - libedit-dev
          - libffi-dev
          - libpq-dev
          - libyaml-dev
          - zlib1g-dev
      become: true

    - name: install desktop environment
      ansible.builtin.package:
        name:
          - slim
          - ubuntu-desktop
      become: true
      when: skip_desktop is undefined

    - name: install required libraries for ansible
      ansible.builtin.package:
        name:
          # Required for https://docs.ansible.com/ansible-core/2.17/playbook_guide/playbooks_privilege_escalation.html#risks-of-becoming-an-unprivileged-user
          - acl
          # Required for community.postgresql
          - python3-psycopg2
      become: true

    - name: create user alindeman
      ansible.builtin.user:
        name: alindeman
        create_home: true
        password: '!' # disable password
        shell: /bin/bash
        groups:
          - users
          - sudo
      become: true

    - name: install ssh key for alindeman
      ansible.posix.authorized_key:
        user: alindeman
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDP4nFAKeLb/7w6lL5MLrkYv/rLoyAl8Wycq1b+lOR7cknqrnWM1PJ+0Qkx8Je+tw/vIKY8CFzBoi4mZ/eOm0dAr5FjNXNCfZf10PWVgsizpOVnYOJTUMHhgO81cASL0pGNxeNr7lHB8FRB3mIcTT6639nrQuwKmYh1YNjHoMErIS1VkkYi6SuYJldWR1LYOJ3PzGoA4GLrck0VHbOJERs1u/ORimw7N0j5mrVKnJQ+72guuWPsbiLl4zwt/RUnxxQi9ou8fisE7qwLmoulCLw11m9Z7xUo86aBmuYfJQ7WBd8lQWczhKorpjEgrwvYcClPAUctjw14rraJGgxc/w2PcGAeH+Kby7WmdACKtZhI5BaNGMX/i0gZj4qlF4tyRJx2DRsTPL3wA2qranNPw5dqtR5VAxJleHx4R3WCXomhQ2BuqCrb5c65wZGaLpOedLeuMDHkdYdTj67OPJvvQzAQ3zQFbGEJX670pw9DU/6rm4GF4pzE93Qzjo9L8SOsBi4w7lQugmbndUF/q7WP8RxiTNL33xgloq6/Tt3Aclu9Z6yDd0UfcmUHezqCIEd6KNon0Q8v55EVWkPlrliZLpONZPHWniRT965D1A3uw5MkWMzYGx26jAS0/RNAfdfS0uwb8zMnBwSdrfETVk2KgycKBxl3r36KytLLMRpl6/VwIQ=="
      become: true

    - name: create user jeremiaheb
      ansible.builtin.user:
        name: jeremiaheb
        create_home: true
        password: "$6$fFfXVu1e4x8eDD/c$OC6TS/4ZCdSZs0QSdG6F/rIYZ0sE3nXoUZnAFhcv4fbsircL/3ET/R.qJU/F0Ayl9O.Z94cD3vNVwmDWUZYfE1"
        shell: /bin/bash
        groups:
          - users
          - sudo
      become: true

    - name: install postgresql server
      ansible.builtin.package:
        name:
          - postgresql
          - postgresql-contrib
      become: true

    - name: create entryapplication_development database user
      community.postgresql.postgresql_user:
        name: entryapplication_development
        password: entryapplication_development
      become: true
      become_user: postgres

    - name: create entryapplication_development database
      community.postgresql.postgresql_db:
        name: entryapplication_development
        owner: entryapplication_development
      become: true
      become_user: postgres

    - name: create entryapplication_test database user
      community.postgresql.postgresql_user:
        name: entryapplication_test
        password: entryapplication_test
        # Required to create temporary datdabases for test parallelization
        role_attr_flags: "CREATEDB"
      become: true
      become_user: postgres

    - name: create entryapplication_test database
      community.postgresql.postgresql_db:
        name: entryapplication_test
        owner: entryapplication_test
      become: true
      become_user: postgres

    - name: create entryapplication_production database user
      community.postgresql.postgresql_user:
        name: entryapplication_production
        password: entryapplication_production
      become: true
      become_user: postgres

    - name: create entryapplication_production database
      community.postgresql.postgresql_db:
        name: entryapplication_production
        owner: entryapplication_production
      become: true
      become_user: postgres

    - name: create /var/www directory
      ansible.builtin.file:
        path: /var/www
        owner: root
        group: root
        mode: "0755"
        state: directory
      become: true

    - name: create /var/www/apps directory
      ansible.builtin.file:
        path: /var/www/apps
        owner: root
        group: root
        mode: "0755"
        state: directory
      become: true

    - name: create user entryapplication
      ansible.builtin.user:
        name: entryapplication
        home: /var/www/apps/EntryApplication
        create_home: true
        # TODO: Temporary. Replace with SSH keys for all deployers.
        password: '$6$OZl.q7ZgYzZIolON$HFXN04yl8qCRuq4KlE0DYRTCKnlEU6oK5krI70baHCDDceJDafoSTgP3elqGViCunFqf2gqC.syi/j/ZXZrP1/'
        shell: /bin/bash
      become: true

    - name: install ssh key for entryapplication
      ansible.posix.authorized_key:
        user: entryapplication
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDP4nFAKeLb/7w6lL5MLrkYv/rLoyAl8Wycq1b+lOR7cknqrnWM1PJ+0Qkx8Je+tw/vIKY8CFzBoi4mZ/eOm0dAr5FjNXNCfZf10PWVgsizpOVnYOJTUMHhgO81cASL0pGNxeNr7lHB8FRB3mIcTT6639nrQuwKmYh1YNjHoMErIS1VkkYi6SuYJldWR1LYOJ3PzGoA4GLrck0VHbOJERs1u/ORimw7N0j5mrVKnJQ+72guuWPsbiLl4zwt/RUnxxQi9ou8fisE7qwLmoulCLw11m9Z7xUo86aBmuYfJQ7WBd8lQWczhKorpjEgrwvYcClPAUctjw14rraJGgxc/w2PcGAeH+Kby7WmdACKtZhI5BaNGMX/i0gZj4qlF4tyRJx2DRsTPL3wA2qranNPw5dqtR5VAxJleHx4R3WCXomhQ2BuqCrb5c65wZGaLpOedLeuMDHkdYdTj67OPJvvQzAQ3zQFbGEJX670pw9DU/6rm4GF4pzE93Qzjo9L8SOsBi4w7lQugmbndUF/q7WP8RxiTNL33xgloq6/Tt3Aclu9Z6yDd0UfcmUHezqCIEd6KNon0Q8v55EVWkPlrliZLpONZPHWniRT965D1A3uw5MkWMzYGx26jAS0/RNAfdfS0uwb8zMnBwSdrfETVk2KgycKBxl3r36KytLLMRpl6/VwIQ=="
      become: true

    - name: create systemd service for entryapplication
      ansible.builtin.copy:
        dest: /etc/systemd/system/entryapplication.service
        content: |
          [Unit]
          Description=EntryApplication
          After=network.target

          [Service]
          User=entryapplication
          Group=entryapplication
          WorkingDirectory=/var/www/apps/EntryApplication/current
          Environment=RAILS_ENV=production
          ExecStart=bundle exec bin/rails server
          ExecReload=/bin/kill -USR1 $MAINPID
          RestartSec=1
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
      become: true

    - name: enable systemd service for entryapplication
      ansible.builtin.service:
        name: entryapplication
        enabled: true
      become: true

    # --------------------------
    # The following tasks are conditional on `development_build` being defined,
    # meaning this playbook is running in Vagrant for local development. The
    # tasks are skipped because they are meaningless for the production virtual
    # machine, which is not used with Vagrant.
    # --------------------------
    - name: install rbenv
      ansible.builtin.git:
        repo: "https://github.com/rbenv/rbenv"
        dest: "{{ ansible_user_dir }}/.rbenv"
        version: "10e96bfc473c7459a447fbbda12164745a72fd37" # v1.3.2
      when: development_build is defined

    - name: install ruby-build
      ansible.builtin.git:
        repo: "https://github.com/rbenv/ruby-build"
        dest: "{{ ansible_user_dir }}/.rbenv/plugins/ruby-build"
        version: "88dd8dbfefeb0439ed0dec938bbe4409f1fc8613" # v20250318
      when: development_build is defined

    - name: add rbenv init to ~/.bashrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_user_dir }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED RBENV INIT"
        block: |
          eval "$(~/.rbenv/bin/rbenv init - --no-rehash bash)"
      when: development_build is defined

    - name: install ruby 3.2.6
      ansible.builtin.command:
        cmd: "{{ ansible_user_dir }}/.rbenv/bin/rbenv install 3.2.6"
        creates: "{{ ansible_user_dir }}/.rbenv/versions/3.2.6"
      when: development_build is defined

    - name: setup EntryApplication
      ansible.builtin.shell:
        cmd: "bash -i -l -c bin/setup"
        chdir: "/vagrant"
      when: development_build is defined
